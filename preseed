### Unattended Installation
d-i auto-install/enable boolean true
d-i debconf/priority select critical

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us
# d-i keyboard-configuration/toggle select No toggling

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto


##UserAcount Creation
#d-i passwd/root-login boolean false
#d-i passwd/user-fullname string Test Name
#d-i passwd/username string username
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
#d-i user-setup/allow-password-weak boolean true
#d-i user-setup/encrypt-home boolean false


# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010

# The user account will be added to some standard initial groups. To
# override that, use this.
#d-i passwd/user-default-groups string audio cdrom video

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern



### Partitioning
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/sda
# and not e.g. /dev/discs/disc0/disc).

# For example, to use the first SCSI/SATA hard disk:
#d-i partman-auto/disk string /dev/sda
d-i preseed/early_command string umount /media || true

# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
ubiquity partman-auto/method string crypto

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
ubiquity partman-lvm/device_remove_lvm boolean true

# The same applies to pre-existing software RAID array:
ubiquity partman-md/device_remove_md boolean true

# And the same goes for the confirmation to write the lvm partitions.
ubiquity partman-lvm/confirm boolean true
ubiquity partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
ubiquity partman-auto/choose_recipe select boot-crypto
ubiquity partman-auto-lvm/new_vg_name string lockbox
ubiquity partman-auto/expert_recipe string \
      boot-crypto :: \
              538 538 1075 free \
                    $primary{ } \
                    $iflabel{ gpt } \
                    $reusemethod{ } \
                    method{ efi } format{ } \
              . \
              256 512 512 ext2 \
                    $primary{ } \
                    $defaultignore{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext2 } \
                    mountpoint{ /boot } \
              . \
              14000 14000 14000 ext4 \
                    $lvmok{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ / } \
              . \
              120000 120000 120000 ext4 \
                    $lvmok{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ /home } \
              . \
              100% 100% 100% linux-swap \
                    $lvmok{ } \
                    lv_name{ swap } \
                    method{ swap } format{ } \
              . \
              4000 4000 4000 ext4 \
                    $lvmok{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ /tmp } \
              . \
              10000 10000 10000 ext4 \
                    $lvmok{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ /var } \
              . \
              10000 100000 -1 ext4 \
                    $lvmok{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ /spare } \
              . \

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
ubiquity partman-partitioning/confirm_write_new_label boolean true
ubiquity partman/choose_partition select finish
ubiquity partman/confirm boolean true
ubiquity partman/confirm_nooverwrite boolean true

# When disk encryption is enabled, skip wiping the partitions beforehand.
#d-i partman-auto-crypto/erase_disks boolean false

# This makes partman automatically partition without confirmation.
ubiquity partman-md/confirm boolean true
ubiquity partman-partitioning/confirm_write_new_label boolean true
ubiquity partman/choose_partition select finish
ubiquity partman/confirm boolean true
ubiquity partman/confirm_nooverwrite boolean true

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
#ubiquity partman/mount_style select uuid
